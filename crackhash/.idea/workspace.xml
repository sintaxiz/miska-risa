<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a00a8ed1-ad67-4689-be50-8e79e0125cda" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/Dockerfile.mongo" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/manager/src/main/java/com/example/manager/config/RabbitMqConfiguration.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/manager/src/main/java/com/example/manager/rabbitmq/RabbitController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/manager/src/main/java/com/example/manager/reps/HashingTask.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/manager/src/main/java/com/example/manager/reps/TaskRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mongo-setup-rs.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mongo-setup.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wait.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/worker/src/main/java/com/example/worker/RabbitMqConfiguration.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/worker/src/main/java/com/example/worker/WorkerService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/manager/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/manager/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/manager/build/classes/java/main/com/example/manager/dto/HashCrackerStatusResponse.class" beforeDir="false" afterPath="$PROJECT_DIR$/manager/build/classes/java/main/com/example/manager/dto/HashCrackerStatusResponse.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/manager/build/classes/java/main/com/example/manager/model/HashCrackerServiceImpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/manager/build/classes/java/main/com/example/manager/model/HashCrackerServiceImpl.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/manager/build/classes/java/main/com/example/manager/model/RequestStatus$Status.class" beforeDir="false" afterPath="$PROJECT_DIR$/manager/build/classes/java/main/com/example/manager/model/RequestStatus$Status.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/manager/build/classes/java/main/com/example/manager/model/RequestStatus.class" beforeDir="false" afterPath="$PROJECT_DIR$/manager/build/classes/java/main/com/example/manager/model/RequestStatus.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/manager/build/libs/manager-plain.jar" beforeDir="false" afterPath="$PROJECT_DIR$/manager/build/libs/manager-plain.jar" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/manager/build/libs/manager.jar" beforeDir="false" afterPath="$PROJECT_DIR$/manager/build/libs/manager.jar" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/manager/build/reports/tests/test/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/manager/build/reports/tests/test/index.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/manager/build/resources/main/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/manager/build/resources/main/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/manager/build/tmp/compileJava/previous-compilation-data.bin" beforeDir="false" afterPath="$PROJECT_DIR$/manager/build/tmp/compileJava/previous-compilation-data.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/manager/build/tmp/compileTestJava/previous-compilation-data.bin" beforeDir="false" afterPath="$PROJECT_DIR$/manager/build/tmp/compileTestJava/previous-compilation-data.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/manager/src/main/java/com/example/manager/model/HashCrackerServiceImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/manager/src/main/java/com/example/manager/model/HashCrackerServiceImpl.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/manager/src/main/java/com/example/manager/model/RequestStatus.java" beforeDir="false" afterPath="$PROJECT_DIR$/manager/src/main/java/com/example/manager/model/RequestStatus.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/manager/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/manager/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/worker/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/worker/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/worker/build/classes/java/main/com/example/worker/HashCrackWorkerController.class" beforeDir="false" afterPath="$PROJECT_DIR$/worker/build/classes/java/main/com/example/worker/HashCrackWorkerController.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/worker/build/libs/worker-plain.jar" beforeDir="false" afterPath="$PROJECT_DIR$/worker/build/libs/worker-plain.jar" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/worker/build/libs/worker.jar" beforeDir="false" afterPath="$PROJECT_DIR$/worker/build/libs/worker.jar" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/worker/build/reports/tests/test/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/worker/build/reports/tests/test/index.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/worker/build/resources/main/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/worker/build/resources/main/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/worker/build/tmp/compileJava/previous-compilation-data.bin" beforeDir="false" afterPath="$PROJECT_DIR$/worker/build/tmp/compileJava/previous-compilation-data.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/worker/build/tmp/compileTestJava/previous-compilation-data.bin" beforeDir="false" afterPath="$PROJECT_DIR$/worker/build/tmp/compileTestJava/previous-compilation-data.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/worker/src/main/java/com/example/worker/HashCrackWorkerController.java" beforeDir="false" afterPath="$PROJECT_DIR$/worker/src/main/java/com/example/worker/HashCrackWorkerController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/worker/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/worker/src/main/resources/application.properties" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DockerExecCommands">
    <ExecCommand>
      <option name="command" value="sh" />
    </ExecCommand>
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="crackhash" type="f1a62948:ProjectNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="JsbtTreeLayoutManager">
    <layout place="tools.popupGrunt">
      <scroll-view-position x="0" y="0" />
    </layout>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2Mfz2DvFDFFzM0ryOIilzfEa9YY" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/nkt/natasha/miska-risa/crackhash&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
    &quot;spring.configuration.checksum&quot;: &quot;ef07775b7b32e3553daa7c153aa9d874&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="com.example.manager" />
      <recent name="com.example.manager.dto" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.runall">
    <configuration name="WorkerApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.example.worker.WorkerApplication" />
      <module name="crackhash.worker.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.example.worker.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="crackhash [dependencies]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="build" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>false</ForceTestExec>
      <method v="2" />
    </configuration>
    <configuration name="gradle build " type="GradleRunConfiguration" factoryName="Gradle">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="build" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <ForceTestExec>false</ForceTestExec>
      <method v="2" />
    </configuration>
    <configuration name="ManagerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="crackhash.manager.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.manager.ManagerApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WorkerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="crackhash.worker.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.worker.WorkerApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Docker Image" type="docker-deploy" factoryName="docker-image" server-name="Docker">
      <deployment type="docker-image">
        <settings>
          <option name="containerName" value="" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="runall" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="commandLineOptions" value="--build" />
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Application.WorkerApplication" />
      <item itemvalue="Docker.runall" />
      <item itemvalue="Docker.Docker Image" />
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      <item itemvalue="Gradle.gradle build " />
      <item itemvalue="Gradle.crackhash [dependencies]" />
      <item itemvalue="Spring Boot.ManagerApplication" />
      <item itemvalue="Spring Boot.WorkerApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Application.WorkerApplication" />
        <item itemvalue="Gradle.crackhash [dependencies]" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a00a8ed1-ad67-4689-be50-8e79e0125cda" name="Changes" comment="" />
      <created>1678173216570</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1678173216570</updated>
      <workItem from="1678173218114" duration="970000" />
      <workItem from="1678174243131" duration="6555000" />
      <workItem from="1678331922160" duration="3768000" />
      <workItem from="1678804212827" duration="2981000" />
      <workItem from="1679546861419" duration="4966000" />
      <workItem from="1682860929155" duration="349000" />
      <workItem from="1683024821204" duration="742000" />
      <workItem from="1683033872255" duration="63000" />
      <workItem from="1683081418659" duration="3590000" />
      <workItem from="1683176639292" duration="9663000" />
      <workItem from="1683254075787" duration="1243000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="dependencySupport" implementationName="java:org.springframework:spring-core" />
    <option featureType="dependencySupport" implementationName="java:jakarta.validation:jakarta.validation-api" />
    <option featureType="dependencySupport" implementationName="java:org.springframework.data:spring-data-commons" />
    <option featureType="dependencySupport" implementationName="java:org.springframework:spring-messaging" />
    <option featureType="dependencySupport" implementationName="java:org.springframework.boot:spring-boot" />
    <option featureType="dependencySupport" implementationName="java:org.springframework:spring-webmvc" />
    <option featureType="dependencySupport" implementationName="java:jakarta.xml.ws:jakarta.xml.ws-api" />
  </component>
</project>